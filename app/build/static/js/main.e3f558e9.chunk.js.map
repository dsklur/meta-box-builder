{"version":3,"sources":["constants/constants.js","context/createDataContext.js","utility/functions.js","context/GeneratorReducer.js","context/GeneratorActions.js","context/GeneratorContext.js","context/FieldTypes/FieldTypesReducer.js","context/FieldTypes/FieldTypesContext.js","context/UpdateSelected/UpdateSelectedReducer.js","context/UpdateSelected/UpdateSelectedContext.js","App.js","index.js"],"names":["fieldTypes","Basic","button","checkbox","checkbox_list","email","hidden","number","password","radio","range","select","select_advanced","text","textarea","url","Advanced","autocomplete","color","date","datetime","fieldset_text","map","image_select","oembed","slider","text_list","time","wysiwyg","WordPress","post","taxonomy","taxonomy_advanced","user","Upload","file","file_advanced","file_input","image","image_advanced","video","Layout","divider","heading","group","fields","general","id","type","name","desc","std","placeholder","size","clone","advanced","before","after","class","attributes","min","max","step","options","inline","multiple","js_options","rows","cols","prefix","suffix","raw","api_key","address_field","region","timestamp","post_type","field_type","parent","query_args","max_file_uploads","force_delete","mime_type","max_status","TEXT_INPUT","NUMBER_INPUT","CHECKBOX","RADIO_CHECKBOX","DROPDOWN_MENU","DATA_LIST_TYPE","LIST_OPTION_TYPE","LIST_FIELD_TYPE","value","reducer","actions","defaultValue","Context","React","createContext","boundActions","Provider","children","useReducer","state","dispatch","key","getLabel","getElementControlName","toTitleCase","getDataCopiedItem","index","data","result","getGeneralData","getAdvancedData","generalItems","multipleInputTypes","Object","keys","forEach","item","elementName","getElementValue","includes","i","advancedItems","optionalList","dataList","idDataList","document","getElementsByName","input","push","items","element","querySelector","tagName","checked","updateSelectedList","localStorage","setItem","JSON","stringify","getSelectedList","parse","getItem","ucfirst","string","charAt","toUpperCase","slice","split","join","generatorReducer","action","payload","responseTime","formatParams","params","Map","listSelected","isSettingValue","isNotGroupField","formatField","formatGroupField","isOwnField","getKeyValue","pop","childrens","length","keyValue","createDataContext","generatePHPCode","window","location","href","requestOptions","method","headers","body","fetch","then","response","json","Date","getTime","catch","error","console","log","fieldTypesReducer","getFieldTypes","updateSelectedReducer","updatedTime","tree","App","Result","lazy","MainTabs","className","fallback","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e3f558e9.chunk.js","sourcesContent":["export const fieldTypes = {\n  Basic: {\n    button: 'Button',\n    // button_group\n    checkbox: 'Checkbox',\n    checkbox_list: 'Checkbox List',\n    email: 'Email',\n    hidden: 'Hidden',\n    number: 'Number',\n    password: 'Password',\n    radio: 'Radio',\n    range: 'Range',\n    select: 'Select',\n    select_advanced: 'Select Advanced',\n    text: 'Text',\n    textarea: 'Textarea',\n    url: 'URL',\n  },\n  Advanced: {\n    autocomplete: 'Autocomplete',\n    // background\n    color: 'Color Picker',\n    // custom_html\n    date: 'Date',\n    datetime: 'Date Time',\n    fieldset_text: 'Fieldset Text',\n    map: 'Google Maps',\n    // key_value\n    image_select: 'Image Select',\n    oembed: 'oEmbed',\n    // osm\n    slider: 'Slider',\n    // switch\n    text_list: 'Text List',\n    time: 'Time',\n    wysiwyg: 'WYSIWYG',\n  },\n  WordPress: {\n    post: 'Post',\n    // sidebar\n    taxonomy: 'Taxonomy',\n    taxonomy_advanced: 'Taxonomy Advanced',\n    user: 'User',\n  },\n  Upload: {\n    file: 'File',\n    file_advanced: 'File Advanced',\n    // file_upload\n    file_input: 'File Input',\n    image: 'Image',\n    image_advanced: 'Image Advanced',\n    // image_upload\n    // single_image\n    video: 'Video',\n  },\n  Layout: {\n    divider: 'Divider',\n    heading: 'Heading',\n    group: 'Group',\n  },\n};\n\nexport const fields = {\n  text: {\n    general: {\n      id: '',\n      type: 'text',\n      name: 'Text',\n      desc: '',\n      std: '',\n      placeholder: '',\n      size: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  number: {\n    general: {\n      id: '',\n      type: 'number',\n      name: 'Number',\n      desc: '',\n      std: '',\n      min: '',\n      max: '',\n      step: '',\n      placeholder: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  url: {\n    general: {\n      id: '',\n      type: 'url',\n      name: 'URL',\n      desc: '',\n      std: '',\n      placeholder: '',\n      size: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  email: {\n    general: {\n      id: '',\n      name: 'Email',\n      type: 'email',\n      desc: '',\n      std: '',\n      placeholder: '',\n      size: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  range: {\n    general: {\n      id: '',\n      name: 'Range',\n      type: 'range',\n      desc: '',\n      std: 0,\n      min: 0,\n      max: 9,\n      step: 1,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  text_list: {\n    general: {\n      id: '',\n      type: 'text_list',\n      name: 'Text List',\n      desc: '',\n      options: [],\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  checkbox: {\n    general: {\n      id: '',\n      name: 'Checkbox',\n      type: 'checkbox',\n      desc: '',\n      std: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  checkbox_list: {\n    general: {\n      id: '',\n      name: 'Checkbox List',\n      type: 'checkbox_list',\n      desc: '',\n      options: '',\n      std: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  button: {\n    general: {\n      id: '',\n      type: 'button',\n      name: 'Button',\n      desc: '',\n      std: '',\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  password: {\n    general: {\n      id: '',\n      type: 'password',\n      name: 'Password',\n      desc: '',\n      std: '',\n      placeholder: '',\n      size: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  radio: {\n    general: {\n      id: '',\n      name: 'Radio',\n      type: 'radio',\n      desc: '',\n      options: [],\n      inline: true,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  select: {\n    general: {\n      id: '',\n      name: 'Select',\n      type: 'select',\n      desc: '',\n      options: '',\n      std: '',\n      placeholder: '',\n      multiple: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  select_advanced: {\n    general: {\n      id: '',\n      name: 'Select Advanced',\n      type: 'select_advanced',\n      desc: '',\n      options: '',\n      std: '',\n      placeholder: '',\n      multiple: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      js_options: [],\n      attributes: [],\n    },\n  },\n  textarea: {\n    general: {\n      id: '',\n      type: 'textarea',\n      name: 'Textarea',\n      desc: '',\n      std: '',\n      placeholder: '',\n      rows: '',\n      cols: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  hidden: {\n    general: {\n      id: '',\n      type: 'hidden',\n      std: '',\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  image_select: {\n    general: {\n      id: '',\n      type: 'image_select',\n      name: 'Image Select',\n      desc: '',\n      std: '',\n      options: '',\n      multiple: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  color: {\n    general: {\n      id: '',\n      name: 'Color Picker',\n      type: 'color',\n      desc: '',\n      std: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  oembed: {\n    general: {\n      id: '',\n      type: 'oembed',\n      name: 'oEmbed',\n      desc: '',\n      std: '',\n      placeholder: '',\n      size: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  slider: {\n    general: {\n      id: '',\n      type: 'slider',\n      name: 'Slider',\n      desc: '',\n      std: '',\n      prefix: '',\n      suffix: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      js_options: [],\n      attributes: [],\n    },\n  },\n  wysiwyg: {\n    general: {\n      id: '',\n      name: 'WYSIWYG',\n      type: 'wysiwyg',\n      desc: '',\n      std: '',\n      raw: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      options: [],\n      attributes: [],\n    },\n  },\n  autocomplete: {\n    general: {\n      id: '',\n      type: 'autocomplete',\n      name: 'Autocomplete',\n      desc: '',\n      options: '',\n      size: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  fieldset_text: {\n    general: {\n      id: '',\n      type: 'fieldset_text',\n      name: 'Fieldset Text',\n      desc: '',\n      options: [],\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  map: {\n    general: {\n      id: '',\n      type: 'map',\n      name: 'Map',\n      desc: '',\n      std: '',\n      api_key: '',\n      address_field: '',\n      region: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  group: {\n    general: {\n      id: 'group',\n      type: 'group',\n      name: 'Group',\n      desc: '',\n    },\n    advanced: {\n      attributes: [],\n    },\n  },\n  heading: {\n    general: {\n      type: 'heading',\n      name: 'Heading',\n      desc: '',\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  divider: {\n    general: {\n      type: 'divider',\n      before: '',\n      after: '',\n    },\n  },\n  date: {\n    general: {\n      id: '',\n      type: 'date',\n      name: 'Date Picker',\n      desc: '',\n      std: '',\n      size: '',\n      inline: false,\n      timestamp: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      js_options: [],\n      attributes: [],\n    },\n  },\n  datetime: {\n    general: {\n      id: '',\n      type: 'datetime',\n      name: 'Date Time Picker',\n      desc: '',\n      std: '',\n      size: '',\n      inline: false,\n      timestamp: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      js_options: [],\n      attributes: [],\n    },\n  },\n  time: {\n    general: {\n      id: '',\n      name: 'Time Picker',\n      type: 'time',\n      desc: '',\n      std: '',\n      size: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      js_options: [],\n      attributes: [],\n    },\n  },\n  post: {\n    general: {\n      id: '',\n      type: 'post',\n      name: 'Post',\n      desc: '',\n      std: '',\n      post_type: 'post',\n      field_type: 'select_advanced', // select, select_advanced\n      parent: false,\n      placeholder: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      query_args: [],\n      attributes: [],\n    },\n  },\n  taxonomy: {\n    general: {\n      id: '',\n      type: 'taxonomy',\n      name: 'Taxonomy',\n      desc: '',\n      taxonomy: 'category',\n      field_type: 'select_advanced',\n      std: '',\n      placeholder: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      query_args: [],\n      attributes: [],\n    },\n  },\n  taxonomy_advanced: {\n    general: {\n      id: '',\n      type: 'taxonomy_advanced',\n      name: 'Taxonomy Advanced',\n      desc: '',\n      taxonomy: 'category',\n      field_type: 'select_advanced',\n      std: '',\n      placeholder: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      query_args: [],\n      attributes: [],\n    },\n  },\n  user: {\n    general: {\n      id: '',\n      type: 'user',\n      name: 'User',\n      desc: '',\n      field_type: 'select_advanced', // select, select_advanced,\n      std: '',\n      placeholder: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      query_args: [],\n      attributes: [],\n    },\n  },\n  file: {\n    general: {\n      id: '',\n      type: 'file',\n      name: 'File',\n      desc: '',\n      max_file_uploads: '',\n      force_delete: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  file_input: {\n    general: {\n      id: '',\n      type: 'file_input',\n      name: 'File Input',\n      desc: '',\n      std: '',\n      placeholder: '',\n      size: '',\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  file_advanced: {\n    general: {\n      id: '',\n      type: 'file_advanced',\n      name: 'File Advanced',\n      desc: '',\n      max_file_uploads: '',\n      mime_type: '',\n      max_status: true,\n      force_delete: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  image_advanced: {\n    general: {\n      id: '',\n      type: 'image_advanced',\n      name: 'Image Advanced',\n      desc: '',\n      max_file_uploads: '',\n      max_status: false,\n      force_delete: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  image: {\n    general: {\n      id: '',\n      type: 'image',\n      name: 'Image Upload',\n      desc: '',\n      max_file_uploads: '',\n      force_delete: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n  video: {\n    general: {\n      id: '',\n      type: 'video',\n      name: 'Video',\n      desc: '',\n      max_file_uploads: 4,\n      max_status: false,\n      force_delete: false,\n      clone: false,\n    },\n    advanced: {\n      before: '',\n      after: '',\n      class: '',\n      attributes: [],\n    },\n  },\n};\n\nexport const TEXT_INPUT = 'TEXT_INPUT';\nexport const NUMBER_INPUT = 'NUMBER_INPUT';\nexport const CHECKBOX = 'CHECKBOX';\nexport const RADIO_CHECKBOX = 'RADIO_CHECKBOX';\nexport const DROPDOWN_MENU = 'DROPDOWN_MENU';\nexport const LIST_WORDPRESS_FIELDS = [\n  'post',\n  'taxonomy',\n  'taxonomy_advanced',\n  'user',\n];\nexport const ADVANCED_ADDITIONAL = {\n  attributes: {\n    title: 'Custom attributes',\n    titleLink:\n      'https://docs.metabox.io/extensions/meta-box-builder/#custom-attributes',\n  },\n  select2: {\n    title: 'Select2 options',\n    titleLink: 'https://select2.org/configuration',\n  },\n  query_args: {\n    title: 'Query arguments',\n    titleLink: null,\n    buttonName: '+ Option',\n  },\n  slider: {\n    title: 'Slider options',\n    titleLink: 'https://api.jqueryui.com/slider/',\n    buttonName: '+ Option',\n  },\n  editor: {\n    title: 'Editor options',\n    titleLink: 'https://codex.wordpress.org/Function_Reference/wp_editor',\n    buttonName: '+ Option',\n  },\n  time_picker: {\n    title: 'Time picker options',\n    titleLink: 'https://trentrichardson.com/examples/timepicker/',\n    buttonName: '+ Option',\n  },\n};\n\nexport const LIST_OPTION = [\n  { type: 'select2', option: 'select_advanced' },\n  { type: 'query_args', option: 'post' },\n  { type: 'query_args', option: 'taxonomy' },\n  { type: 'query_args', option: 'taxonomy_advanced' },\n  { type: 'query_args', option: 'user' },\n  { type: 'slider', option: 'slider' },\n  { type: 'editor', option: 'wysiwyg' },\n  { type: 'date_picker', option: 'date' },\n  { type: 'datetime_picker', option: 'datetime' },\n  { type: 'time_picker', option: 'time' },\n];\n\nexport const DATA_LIST = ['text', 'oembed', 'file_input'];\nexport const DATA_LIST_TYPE = ['datalist'];\n\nexport const LIST_OPTION_TYPE = [\n  'attributes',\n  'query_args',\n  'js_options',\n  'options',\n];\n\nexport const LIST_ADD_SELECT = [\n  'checkbox_list',\n  'radio',\n  'select',\n  'select_advanced',\n  'image_select',\n  'autocomplete',\n];\nexport const LIST_NO_HEADING = ['text_list', 'fieldset_text'];\n\nexport const LIST_FIELD_TYPE = {\n  post: [\n    { type: 'select', value: 'Select' },\n    { type: 'select_tree', value: 'Select tree' },\n    { type: 'select_advanced', value: 'Select advanced' },\n    { type: 'checkbox_list', value: 'Checkbox list' },\n    { type: 'checkbox_tree', value: 'Checkbox tree' },\n    { type: 'radio_list', value: 'Radio list' },\n  ],\n  taxonomy: [\n    { type: 'select', value: 'Select' },\n    { type: 'select_tree', value: 'Select tree' },\n    { type: 'select_advanced', value: 'Select advanced' },\n    { type: 'checkbox_list', value: 'Checkbox list' },\n    { type: 'checkbox_tree', value: 'Checkbox tree' },\n    { type: 'radio_list', value: 'Radio list' },\n  ],\n  taxonomy_advanced: [\n    { type: 'select', value: 'Select' },\n    { type: 'select_tree', value: 'Select tree' },\n    { type: 'select_advanced', value: 'Select advanced' },\n    { type: 'checkbox_list', value: 'Checkbox list' },\n    { type: 'checkbox_tree', value: 'Checkbox tree' },\n    { type: 'radio_list', value: 'Radio list' },\n  ],\n  user: [\n    { type: 'select', value: 'Select' },\n    { type: 'select_advanced', value: 'Select advanced' },\n    { type: 'checkbox_list', value: 'Checkbox list' },\n    { type: 'radio_list', value: 'Radio list' },\n  ],\n};\n","import React, { useReducer } from 'react';\n\nexport default (reducer, actions, defaultValue) => {\n    const Context = React.createContext();\n    const boundActions = {};\n    const Provider = ({ children }) => {\n        const [state, dispatch] = useReducer(reducer, defaultValue);\n\n        for (let key in actions) {\n            boundActions[key] = actions[key](dispatch);\n        }\n\n        return (\n            <Context.Provider value={{ state }}>\n                {children}\n            </Context.Provider>\n        )\n    }\n\n    return { Context, Provider, actions: boundActions }\n}","import { TEXT_INPUT, NUMBER_INPUT, CHECKBOX, fields, DROPDOWN_MENU, RADIO_CHECKBOX, LIST_OPTION_TYPE, DATA_LIST_TYPE } from '../constants/constants';\n\nexport const getLabel = (name, type) => {\n    const labels = {\n        class: \"Custom CSS class\",\n        std: \"Default value\",\n        size: \"Size of the input box\",\n        placeholder: \"Placeholder\",\n        min: \"Minimum value\",\n        max: \"Maximum value\",\n        rows: \"Rows\",\n        cols: \"Columns\",\n        prefix: \"Prefix\",\n        suffix: \"Suffix\",\n        timestamp: \"Timestamp\",\n        max_file_uploads: \"Maximum number of files\",\n        options: \"Options\",\n        parent: \"Parent\",\n        taxonomy: \"Taxonomy\",\n    };\n\n    return (name === 'std' && type === 'checkbox') ? \"Checked?\" : labels[name];\n};\n\nexport const getElementControlName = (name, type) => {\n    let types;\n    switch (name) {\n        case 'std':\n            types = {\n                button: 'StdButton',\n                checkbox: 'StdCheckbox',\n                checkbox_list: 'StdChoice',\n                map: 'StdMap',\n                select: 'StdChoice',\n                textarea: 'StdChoice',\n                wysiwyg: 'StdChoice',\n            };\n            return types[type] || 'TextInput';\n        case 'placeholder':\n        case 'class':\n        case 'min':\n        case 'max':\n            return 'TextInput';\n        case 'size':\n        case 'rows':\n        case 'cols':\n        case 'max_file_uploads':\n            return 'NumberInput';\n        case 'inline':\n            types = {\n                date: 'InlineDate',\n                datetime: 'InlineDate',\n            };\n            return types[type] || 'Inline';\n        case 'options':\n            types = {\n                fieldset_text: 'OptionsFieldsetText',\n                text_list: 'OptionsTextList',\n                wysiwyg: 'OptionsWysiwyg',\n            };\n            return types[type] || 'Options';\n        case 'query_args':\n            types = {\n                taxonomy: 'QueryArgsTaxonomy',\n                taxonomy_advanced: 'QueryArgsTaxonomy',\n                user: 'QueryArgsUser',\n            };\n            return types[type] || 'QueryArgs';\n        case 'js_options':\n            types = {\n                date: 'JsOptionsDate',\n                datetime: 'JsOptionsDate',\n                slider: 'JsOptionsSlider',\n                time: 'JsOptionsTime',\n            };\n            return types[type] || 'JsOptions';\n        default:\n            return toTitleCase(name);\n    }\n}\n\nexport const getElementType = (name) => {\n    const inputsText = ['id', 'name', 'desc', 'std', 'placeholder', 'min', 'max', 'rows', 'cols', 'prefix', 'suffix', 'address_field', 'api_key', 'region', 'mime_type'];\n    const inputsNumber = ['size', 'step', 'max_file_uploads'];\n    const checkboxes = ['clone', 'inline', 'multiple', 'timestamp', 'force_delete', 'max_status', 'parent', 'raw'];\n    const ratioCheckbox = ['field_type'];\n    const dropdownMenu = ['post_type', 'taxonomy']\n    let type = ''\n    if (inputsText.includes(name)) {\n        type = TEXT_INPUT\n    }\n    if (inputsNumber.includes(name)) {\n        type = NUMBER_INPUT\n    }\n    if (checkboxes.includes(name)) {\n        type = CHECKBOX\n    }\n    if (ratioCheckbox.includes(name)) {\n        type = RADIO_CHECKBOX\n    }\n    if (dropdownMenu.includes(name)) {\n        type = DROPDOWN_MENU\n    }\n\n    return type\n}\n\nexport const getDataCopiedItem = (type, index) => {\n    let data = fields[type];\n    let result = {}\n    result.general = getGeneralData(data.general, index);\n    result.advanced = getAdvancedData(data.advanced, index)\n\n    return result\n}\n\nconst getGeneralData = (generalItems, index) => {\n    let result = {}\n    const multipleInputTypes = ['fieldset_text', 'text_list'];\n\n    Object.keys(generalItems).forEach(item => {\n        const elementName = `fields-${index}-${item}`;\n        let value = getElementValue(elementName);\n        value = value ? value : generalItems[item]\n        result[item] = value;\n\n        if (item === 'options' && multipleInputTypes.includes(item)) {\n            let options = []\n            for (let i = 0; i < value; i++) {\n                options[i] = {}\n                options[i]['key'] = getElementValue(`fields-${index}-${item}-${i}-key`);\n                options[i]['label'] = getElementValue(`fields-${index}-${item}-${i}-label`);\n            }\n            result[item] = options;\n        }\n    })\n\n    return result\n}\n\nconst getAdvancedData = (advancedItems, index) => {\n    let result = {}\n    Object.keys(advancedItems).forEach(item => {\n        const elementName = `fields-${index}-${item}`;\n        let value = getElementValue(elementName);\n        value = value ? value : advancedItems[item]\n        if (LIST_OPTION_TYPE.includes(item)) {\n            let optionalList = []\n            for (let i = 0; i < value; i++) {\n                optionalList[i] = {}\n                optionalList[i]['key'] = getElementValue(`fields-${index}-${item}-${i}-key`);\n                optionalList[i]['label'] = getElementValue(`fields-${index}-${item}-${i}-label`);\n            }\n\n            result[item] = optionalList;\n        } else if (DATA_LIST_TYPE.includes(item)) {\n            let dataList = []\n            let idDataList = document.getElementsByName(`fields-${index}-datalist-id`)[0]?.value\n            const listValue = document.getElementsByName(`fields-${index}-datalist-options-0`);\n\n            listValue.forEach(input => {\n                dataList.push(input.value);\n            });\n\n            result[item] = { id: idDataList, items: dataList };\n        } else {\n            result[item] = value;\n        }\n    })\n\n    return result\n}\n\nconst getElementValue = name => {\n    const element = document.querySelector(`[name=\"${name}\"]`);\n    if (!element) {\n        return null;\n    }\n    if (['select', 'textarea'].includes(element.tagName) || ['text', 'number', 'email'].includes(element.type)) {\n        return element.value;\n    }\n    if ('checkbox' === element.type) {\n        return element?.checked;\n    }\n    if ('radio' === element.type) {\n        return document.querySelector(`[name=\"${name}\"]:checked`).value;\n    }\n}\n\nexport const updateSelectedList = data => localStorage.setItem('selectedList', JSON.stringify(data))\n\nexport const getSelectedList = () => JSON.parse(localStorage.getItem('selectedList'))\n\n\nexport const ucfirst = string => string.charAt(0).toUpperCase() + string.slice(1);\nconst toTitleCase = string => string.split('_').map(ucfirst).join('');","import { GENERATE_PHP_CODE, ERROR } from './GeneratorActions';\n\nconst generatorReducer = (state, action) => {\n    switch (action.type) {\n        case GENERATE_PHP_CODE:\n            return { ...state, data: action.payload,responseTime: action.responseTime };\n        case ERROR:\n            return { ...state, responseTime: action.responseTime };\n        default:\n            return state;\n    }\n};\n\nexport default generatorReducer;","export const GENERATE_PHP_CODE = 'GENERATE_PHP_CODE';\nexport const ERROR = 'ERROR';","import createDataContext from './createDataContext';\nimport generatorReducer from './GeneratorReducer';\nimport { GENERATE_PHP_CODE } from './GeneratorActions';\nimport { getSelectedList } from '../utility/functions';\nimport { fields } from '../constants/constants';\n\nconst generatePHPCode = dispatch => params => {\n    const isTest = window.location.href.includes('localhost');\n    let url = isTest ? 'http://localhost/metaboxio/wp-json/mbb-parser/meta-box' : 'https://metabox.io/wp-json/mbb-parser/meta-box';\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formatParams(params))\n    };\n    fetch(url, requestOptions)\n        .then(response => response.json())\n        .then(data => dispatch({ type: GENERATE_PHP_CODE, payload: data, responseTime: (new Date()).getTime() }))\n        .catch(error => console.log(error));\n};\n\nconst formatParams = (params) => {\n    let result = new Map();\n    const listSelected = getSelectedList();\n\n    // format params setting tab\n    for (const key in params) {\n        if (isSettingValue(key)) {\n            result[key] = params[key]\n        }\n    }\n\n    result.fields = []\n    listSelected.items.map(item => {\n        if (isNotGroupField(item.type)) {\n            result.fields.push(formatField(item.id, params))\n        } else {\n            result.fields.push(formatGroupField(item, params))\n        }\n    })\n\n    return result\n}\n\nconst isSettingValue = key => !key.includes('fields')\n\nconst isNotGroupField = type => type !== 'group'\n\nconst isOwnField = (key, id) => key.includes(id)\n\nconst getKeyValue = key => key.split('-').slice(-1).pop()\n\n\nconst formatField = (id, params) => {\n    let result = {}\n    for (const key in params) {\n        if (isOwnField(key, id)) {\n            const keyValue = getKeyValue(key);\n            result[keyValue] = params[key]\n        }\n    }\n\n    return result;\n}\n\nconst formatGroupField = (item, params, result = {}) => {\n    const childrens = item.items;\n    if(childrens.length === 0) return\n    // fill group params\n    for (const key in params) {\n        if (isOwnField(key, item.id)) {\n            const keyValue = getKeyValue(key);\n            result[keyValue] = params[key]\n        }\n    }\n    // handle children fields\n    if (childrens) {\n        result.fields = []\n        childrens.map(children => {\n            if (isNotGroupField(children.type)) {\n                result.fields.push(formatField(children.id, params))\n            } else {\n                result.fields.push(formatGroupField(children, params))\n            }\n        })\n    }\n\n    return result;\n}\n\nexport const { Provider, Context, actions } = createDataContext(\n    generatorReducer,\n    { generatePHPCode },\n    { data: '', responseTime: '' }\n);","const fieldTypesReducer = (state, action) => {\n    const type = action.type;\n    return { ...state,[type]: action.payload};\n  };\n  \n  export default fieldTypesReducer;","import createDataContext from '../createDataContext';\nimport fieldTypesReducer from './FieldTypesReducer';\n\nconst getFieldTypes = dispatch => (type) => {\n    const url = `http://demo1.elightup.com/buse2/og/api.php?type=${type}&fbclid=IwAR2B6qpcOVyslcCOULR2vW6S-2r4MKLG44-hDtQlklQ1Dfb2TVzuFOJawVw`\n    fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            dispatch({ type, payload: data })\n        })\n};\n\nexport const { Provider, Context, actions } = createDataContext(\n    fieldTypesReducer,\n    { getFieldTypes },\n    {}\n);","const updateSelectedReducer = (state, action) => {\n  return { ...state, updatedTime: action.updatedTime , tree: action.tree};\n};\n\nexport default updateSelectedReducer;","import createDataContext from '../createDataContext';\nimport updateSelectedReducer from './UpdateSelectedReducer';\n\nconst updateSelectedList = dispatch => (tree) => {\n  dispatch({ updatedTime: (new Date()).getTime(), tree })\n};\n\nexport const { Provider, Context, actions } = createDataContext(\n  updateSelectedReducer,\n  { updateSelectedList },\n  { updatedTime: null, tree: { id: 'root', items: [] } }\n);","import React, { lazy, Suspense } from 'react';\nimport { Provider as GeneratorProvider } from './context/GeneratorContext';\nimport { Provider as UpdateSelectedProvider } from './context/UpdateSelected/UpdateSelectedContext';\nimport { Provider as FieldTypesProvider } from './context/FieldTypes/FieldTypesContext';\n\nfunction App() {\n  const Result = lazy(() => import('./components/Result'))\n  const MainTabs = lazy(() => import('./components/MainTabs/MainTabs'))\n  return (\n    <div className=\"og\">\n      <GeneratorProvider>\n        <UpdateSelectedProvider>\n          <FieldTypesProvider>\n            <Suspense fallback={null}>\n              <MainTabs />\n              <Result />\n            </Suspense>\n          </FieldTypesProvider>\n        </UpdateSelectedProvider>\n      </GeneratorProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}