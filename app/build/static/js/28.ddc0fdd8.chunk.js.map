{"version":3,"sources":["components/Common/Elements/OptionsFieldsetText.js"],"names":["Item","register","name","type","index","data","removeItem","className","placeholder","ref","defaultValue","key","label","onClick","xIcon","OptionsFieldsetText","props","useState","list","setList","newList","splice","map","item","concat"],"mappings":"gLAyBMA,EAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,KAAMC,EAArC,EAAqCA,WAArC,OACX,yBAAKC,UAAU,gBACb,2BAAOJ,KAAK,OAAOK,YAAY,YAAYC,IAAKR,EAAUC,KAAI,UAAKA,EAAL,YAAaC,EAAb,YAAqBC,EAArB,QAAkCM,aAAcL,EAAKM,MACnH,2BAAOR,KAAK,OAAOK,YAAY,cAAcC,IAAKR,EAAUC,KAAI,UAAKA,EAAL,YAAaC,EAAb,YAAqBC,EAArB,UAAoCM,aAAcL,EAAKO,QACvH,4BAAQT,KAAK,SAASU,QAAS,kBAAMP,EAAWF,KAASU,OAI9CC,UA9Ba,SAAAC,GAAU,IAAD,EACXC,mBAASD,EAAMX,KAAN,SADE,mBAC5Ba,EAD4B,KACtBC,EADsB,KAG7Bb,EAAa,SAAAF,GACjB,IAAIgB,EAAO,YAAOF,GAClBE,EAAQC,OAAOjB,EAAO,GACtBe,EAAQC,IAGV,OACE,yBAAKb,UAAU,iBACb,sCAEEW,EAAKI,KAAI,SAACC,EAAMnB,GAAP,OACP,kBAACJ,EAAD,CAAMK,KAAMkB,EAAMZ,IAAKP,EAAOA,MAAOA,EAAOE,WAAYA,EAAaJ,KAAI,iBAAYc,EAAMZ,OAASD,KAAK,eAG7G,4BAAQA,KAAK,SAASU,QAAS,kBAAMM,EAAQD,EAAKM,OAAO,CAAEb,IAAK,GAAIC,MAAO,QAA3E","file":"static/js/28.ddc0fdd8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {xIcon} from '../../../constants/icons';\n\nconst OptionsFieldsetText = props => {\n  const [list, setList] = useState(props.data['options']);\n\n  const removeItem = index => {\n    let newList = [...list];\n    newList.splice(index, 1);\n    setList(newList);\n  }\n\n  return (\n    <div className=\"og-attributes\">\n      <h4>Inputs</h4>\n      {\n        list.map((item, index) => (\n          <Item data={item} key={index} index={index} removeItem={removeItem}  name={`fields-${props.index}`} type='options' />\n        ))\n      }\n      <button type=\"button\" onClick={() => setList(list.concat({ key: '', label: '' }))}>+ Add Input</button>\n    </div>\n  )\n}\n\nconst Item = ({register, name, type, index, data, removeItem}) => (\n  <div className=\"og-attribute\">\n    <input type=\"text\" placeholder=\"Enter key\" ref={register} name={`${name}-${type}-${index}-key`} defaultValue={data.key} />\n    <input type=\"text\" placeholder=\"Enter label\" ref={register} name={`${name}-${type}-${index}-value`} defaultValue={data.label} />\n    <button type=\"button\" onClick={() => removeItem(index)}>{xIcon}</button>\n  </div>\n)\n\nexport default OptionsFieldsetText;"],"sourceRoot":""}