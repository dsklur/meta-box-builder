[x] Check edit slug/id của field group
[x] Fix toggle field settings lag.
[x] Check if we need to store field._expand and use toggle from useFields.
	Đã bỏ, do không còn cần expand field nữa
[ ] Chuyển settings của field group sang sidebar
	[x] Check lại xem khi nào chỉ cần dùng getSettings() (VD: truyền biến qua URL), khi nào chỉ cần lấy trực tiếp qua MbbApp. Với 2 case này thì nên dùng chung 1 code (qua getSettings()). Lưu ý chỉ dùng cho stateless.
	[x] Check lại xem khi nào dùng settings context và các giá trị dạng stateful (object type, ...)
	[ ] Kiểm tra khi settings có thì open panel: Tạm thời để sau...
	[x] Fix nếu sidebar ko mở thì có lưu được dữ liệu hay không
[ ] Chuyển settings của fields sang sidebar
	[x] Làm 2 nút trên sidebar cho: add field, edit field group settings
	[x] Toogle 2 panel đó mượt mà
	[x] Cho phép thêm được field
	[x] Style add field panel
	[x] Làm 1 portal cho edit field settings
	[x] Khi click vào 1 field thì show panel edit field settings
	[x] Check xem tại sao admin columns, clone vẫn hiện các subfields khi các checkbox ban đầu ko enable
	[ ] Làm indicator cho các panel, tức là khi có settings thay đổi so với default thì có indicator để nhận diện
	[x] Highlight field đang được edit
[x] Click add new field thì ra modal chọn field, các field có icon kèm theo
[ ] Làm dropdown menu, insert field before/after, duplicate, delete, ...
[ ] Làm context menu, khi click chuột phải cũng ra menu để thêm field, insert field before, after, duplicate, delete, ...
[ ] Kéo thả nút add field vào danh sách field


[ ] Update UI for creating settings pages
[ ] Update UI for creating relationships
	[ ] Xóa phần collapsible, bao gồm cả CSS


## Settings của field group:

- Settings được lấy từ biến MbbApp.settings và có thể truyền qua URL (trong trường hợp muốn tự setup settings cho 1 post type khi vừa mới tạo xong)
- Các settings lấy và update từ hook `useSettings`. Một số setting được dùng chung trong các component như sau:
	- prefix: để lấy đúng ID (bao gồm cả prefix) của các field text gợi ý. Được dùng trong các component:
		+ `AddressField`
		+ `FieldInserter` (admin columns, conditional logic)
		+ `GroupTitle`
	- `object_type`: để lấy object type dùng trong các component dưới:
		+ `Sidebar`
		+ `Location`
		+ `IncludeExclude`
		+ `ShowHide`
		+ `AdminColumnsPosition`
	- `post_types`: để lấy post types được chọn cho các component dưới:
		+ `Location`
		+ `Post`
		+ `IncludeExclude`
- Các settings sẽ được hiển thị ở sidebar, chia thành các panel. Các extensions khi được cài cũng sẽ tạo ra các panel của riêng chúng.
- Mặc định thì có các panel sau là mở: summary, location, settings (dành cho post), block settings

## Settings của fields

- Phần settings của field sẽ được hiện ở sidebar, trong panel `EditFieldSettingsPanel`. Trong panel này sẽ hiện tất cả các settings của các field (do dùng uncontrolled form nên buộc phải có các input trong DOM).
- Panel này chứa 1 div để làm portal cho các field. Mỗi field sẽ tách làm 2 phần, 1 phần preview ở phần main và 1 phần edit settings nằm trong portal.
- Khi lựa chọn 1 field ở vùng main thì
	- Lưu unique ID của field đó vào trong hook `useEditFieldSettingsPanel`
	- Thêm class để hiển thị settings của field đó trong panel
	- Setup sidebar hiện panel `EditFieldSettingsPanel`. Do phần ẩn hiện sidebar panel này được sử dụng khi chọn 1 field, nên id của sidebar panel và action ẩn hiện được đưa vào hook `useSidebarPanel`.

## Danh sách fields

- Do sử dụng library SortableJS nên cần phải tạo nhiều list để chứa các field. Mỗi 1 group sẽ là 1 list, và có 1 list là root, chứa các field root.
- Sử dụng `useLists` hook để truy xuất đến các list này ở mọi nơi (globally), khác với cách dùng `useFields` trước đây, chỉ dùng cục bộ.
- Khi cần sử dụng các hàm CRUD cho từng list, gọi qua hàm `getForList`.
- Do lưu tất cả các field vào đây, nên có thể lấy danh sách tất cả các field, thay thế cho hook `useFieldIds` trước đây. Vì có thể lấy đủ thông tin, nên các phần suggestion trong `<FieldInserter>` của group title, address, conditional logic, ... có thể hiện tên field và khi chọn thì điền ID của field.
- Các update về field như name/id/label hoặc icon thông qua các hook cũ `useFieldData` hoặc `useFieldNameId` đều bỏ, thay thế bằng `updateField`.